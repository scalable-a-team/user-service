basePath: /api/user
definitions:
  forms.AddWalletBalanceInput:
    properties:
      add_balance:
        type: integer
    required:
    - add_balance
    type: object
  forms.AddWalletBalanceResponse:
    properties:
      new_balance:
        type: integer
    type: object
  forms.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/forms.UserResponse'
    type: object
  forms.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  forms.UserGroupResponse:
    properties:
      name:
        type: string
    type: object
  forms.UserProfileResponse:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  forms.UserResponse:
    properties:
      group:
        $ref: '#/definitions/forms.UserGroupResponse'
      id:
        type: integer
      profile:
        $ref: '#/definitions/forms.UserProfileResponse'
      username:
        type: string
      wallet_balance:
        type: integer
    type: object
  forms.UserSignIn:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  forms.UserSignUp:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - first_name
    - last_name
    - password
    - username
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Buyer Service API
  version: "1.0"
paths:
  /customer/increase_balance:
    post:
      consumes:
      - application/json
      description: Increase custom wallet balance
      parameters:
      - description: Bearer YourJWTToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: Increment balance by certain amount
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/forms.AddWalletBalanceInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.AddWalletBalanceResponse'
      security:
      - JWT Key: []
      summary: Topup customer wallet balance to purchase stuff
      tags:
      - example
  /customer/login:
    post:
      consumes:
      - application/json
      description: Return JWT access and refresh pair, alongside user profile
      parameters:
      - description: BuyerLogin input
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/forms.UserSignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.LoginResponse'
      summary: BuyerLogin user
      tags:
      - example
  /customer/profile:
    get:
      consumes:
      - application/json
      description: Get customer profile from Authorization JWT header
      parameters:
      - description: Bearer YourJWTToken
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.UserResponse'
      security:
      - JWT Key: []
      summary: Get Buyer BuyerProfile
      tags:
      - example
  /customer/refresh_token:
    post:
      consumes:
      - application/json
      description: Return JWT access token given refresh token
      parameters:
      - description: Receive refresh token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/forms.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Refresh token handler
      tags:
      - example
  /customer/register:
    post:
      consumes:
      - application/json
      description: Register buyer account
      parameters:
      - description: Signup input
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/forms.UserSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.LoginResponse'
      summary: Register customer
      tags:
      - example
  /seller/login:
    post:
      consumes:
      - application/json
      description: Return JWT access and refresh pair, alongside user profile
      parameters:
      - description: SellerLogin input
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/forms.UserSignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.LoginResponse'
      summary: SellerLogin user
      tags:
      - example
  /seller/profile:
    get:
      consumes:
      - application/json
      description: Get seller profile from Authorization JWT header
      parameters:
      - description: Bearer YourJWTToken
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.UserResponse'
      security:
      - JWT Key: []
      summary: Get Seller SellerProfile
      tags:
      - example
  /seller/refresh_token:
    post:
      consumes:
      - application/json
      description: Return JWT access token given refresh token
      parameters:
      - description: Receive refresh token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/forms.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Refresh token handler
      tags:
      - example
  /seller/register:
    post:
      consumes:
      - application/json
      description: Register seller account
      parameters:
      - description: Signup input
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/forms.UserSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/forms.LoginResponse'
      summary: Register customer
      tags:
      - example
securityDefinitions:
  ApiKeyAuth  Authorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
